{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMSiR+5cAdyd7VrdiKdipl5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#**Polymorphism**\n","\n","1. Method overriding\n","2. Method Overloading\n","3. Operator Overloading"],"metadata":{"id":"A39X_lDpqW23"}},{"cell_type":"markdown","source":["#Method Overriding\n","\n","* **if both parent as well as child class same method name and if the object acess that method than the method defined in the child class will be executed**"],"metadata":{"id":"JTWr8MYXrLKX"}},{"cell_type":"code","source":["class Product:\n","\n","  def __init__(self, name, price):\n","    self.name = name\n","    self.price = price\n","\n","  def buy(self):\n","    print(f\"You have bought {self.name} for {self.price}\")\n","\n","\n","class Laptop(Product):\n","\n","  def __init__(self, name, price, ram):\n","    super().__init__(name, price)\n","    self.ram = ram\n","\n","\n","  def buy(self):\n","    print(\"You are accesing the buy method of the  child Class!!\")\n","    print('Now your are accessing the buy method of the parent class using super() keyword !!')\n","    super().buy()\n","\n","\n","\n","l=Laptop(\"HP\", 50000, 16)\n","l.buy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n_u1yw7brpXM","executionInfo":{"status":"ok","timestamp":1720347441394,"user_tz":-330,"elapsed":556,"user":{"displayName":"shekhar kumar","userId":"15654137556873769980"}},"outputId":"eeee1e91-d0a6-4567-8bf1-439bd5756904"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["You are accesing the buy method of the  child Class!!\n","Now your are accessing the buy method of the parent class using super() keyword !!\n","You have bought HP for 50000\n"]}]},{"cell_type":"markdown","source":["# Method Overloading"],"metadata":{"id":"8u6SqPprsUnm"}},{"cell_type":"code","source":["class Geometry:\n","\n","# Defing an area function to calculate the area of the rectangle\n","\n","  def area(self,r):\n","    return(3.14*r*r)\n","\n","\n","# Defing an area function to calculate the area of the rectangle\n","  def area(self,L,B):\n","    return(L*B)\n","\n"],"metadata":{"id":"aG7b41Uiszi0","executionInfo":{"status":"ok","timestamp":1720347595819,"user_tz":-330,"elapsed":464,"user":{"displayName":"shekhar kumar","userId":"15654137556873769980"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["obj=Geometry()\n","obj.area(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":159},"id":"tg_9e3IrtQ-x","executionInfo":{"status":"error","timestamp":1720347610362,"user_tz":-330,"elapsed":516,"user":{"displayName":"shekhar kumar","userId":"15654137556873769980"}},"outputId":"48d3fa41-1476-49a9-8cb6-bf3cf2754987"},"execution_count":4,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"Geometry.area() missing 1 required positional argument: 'B'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-c9d3c556f516>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mGeometry\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marea\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: Geometry.area() missing 1 required positional argument: 'B'"]}]},{"cell_type":"markdown","source":["\n","**Addressing above issue by using default arguments**"],"metadata":{"id":"jeHstEpItUg9"}},{"cell_type":"code","source":["class Geometry:\n","\n","# Defing an area function to calculate the area of the rectangle\n","\n","  def area(self,a,b=0):\n","    if b==0:\n","      print(\"Area of the Circle:\",end=\" \")\n","      return(3.14*a*a)\n","\n","    elif a==b:\n","      print(\"Area of the Square:\",end=\" \")\n","      return(a*b)\n","\n","    else:\n","      print(\"Area of the Rectangle:\",end=\" \")\n","      return(a*b)\n","\n","\n","obj=Geometry()\n","\n","print(obj.area(5))\n","print(obj.area(5,6))\n","print(obj.area(5,5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7A0tLpuKubsF","executionInfo":{"status":"ok","timestamp":1720348131092,"user_tz":-330,"elapsed":563,"user":{"displayName":"shekhar kumar","userId":"15654137556873769980"}},"outputId":"77a66b88-af85-48a3-d858-c01945e228ea"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Area of the Circle: 78.5\n","Area of the Rectangle: 30\n","Area of the Square: 25\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"bn06UzibvTpI"}},{"cell_type":"markdown","source":["#Operator Overloading"],"metadata":{"id":"gLADB37wvZF8"}},{"cell_type":"code","source":["2+3  # basic behaviour is to add two numbers mathematically"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CRN0oYofvckE","executionInfo":{"status":"ok","timestamp":1720348466178,"user_tz":-330,"elapsed":463,"user":{"displayName":"shekhar kumar","userId":"15654137556873769980"}},"outputId":"650327d5-a8c7-43d6-c224-c827f4d3a226"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["# Behaviour changed for the plus operator"],"metadata":{"id":"kNfIt_kFwa7v"}},{"cell_type":"code","source":["\"Hello\"+\"World\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"21us8aSKwXE9","executionInfo":{"status":"ok","timestamp":1720348417930,"user_tz":-330,"elapsed":466,"user":{"displayName":"shekhar kumar","userId":"15654137556873769980"}},"outputId":"a6cab67f-9ce9-4229-b0ca-fe889626ea88"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'HelloWorld'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":[],"metadata":{"id":"_nb1CeSTwYZl"},"execution_count":null,"outputs":[]}]}